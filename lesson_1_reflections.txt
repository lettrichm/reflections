How did viewing a diff between two verions of a file help you see the bug that
was introduced?
I was able to see the lines that were different between the old code and the
new code.  By examining the lines that were changed, I could look for the bug.


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?
It will make me more aware of common mistakes and allow me to pull out smaller
pieces of code.


What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs habing versions automatically saved like Google
docs does?
Pros: I can choose when and make sure I break at logical points
Cons: I may forget to commit


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file
separately?
For coding, often times multiple interdependent files are required for one
project, whereas Google Docs is designed for single document projects


How can you use the commands git log and git diff to view the history of files?
Using git log will show a list of the versions, git diff can be used to compare
the versions


How might using version control make you more confident to make changes that 
could break something?
Version control will give me the freedom to make any changes and know that I 
can easily go back to a working state. Further, I can look at the differences 
between the working file and the broken file.

Now that you have your workspace set up, what do you want to try using Git for?
I plan to use Git for my programming/coding projects. I'd also like to explore 
using Git for manuscripts

